openapi: 3.0.0
info:
  title: Case Subfolder
  version: 0.0.1
  description: "Case Subfolder project"
servers:
  - url: "http://localhost:9000"

components:
  responses:
    Success:
      description: "Success"
      content:
        "application/json":
          schema:
            type: object
            required:
              - success
            properties:
              success:
                $ref: "#/components/schemas/Success"

    Unauthorized:
      description: "No privilege"
      content:
        "application/json":
          schema:
            type: object
            required:
              - code
              - message
            properties:
              code:
                $ref: "#/components/schemas/ErrorCode"
              message:
                $ref: "#/components/schemas/ErrorMessage"

    InvalidRequest:
      description: "Invalid request"
      content:
        "application/json":
          schema:
            type: object
            required:
              - code
              - message
            properties:
              code:
                $ref: "#/components/schemas/ErrorCode"
              message:
                $ref: "#/components/schemas/ErrorMessage"

  schemas:
    Success:
      type: boolean
      description: "Always `true`, used to indicate a non-query request finished without error"
    ErrorCode:
      type: integer
      format: int32
      description: "The error code"
    ErrorMessage:
      type: string
      description: "A message to describe the error and help identifying problem easier"

paths:
  /users:
    get:
      summary: "Get information of all users in the system"
      description: "In the future this endpoint will have a parameter to determine whether deleted users should be returned"
      responses:
        200:
          description: "Success"
          content:
            "application/json":
              schema:
                type: object
                required:
                  - data
                properties:
                  success:
                    $ref: "#/components/schemas/Success"
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                      properties:
                        id:
                          type: integer
                          format: int32
                          description: "ID of the user"
                        username:
                          type: string
                          description: "Username of user account"
                        email:
                          type: string
                          description: "Email of the user"
                        displayName:
                          type: string
                          description: "The name to display in the system, username is used for login only"
                        image:
                          type: string
                          format: base64
                          description: "User profile image"
                        jobTitleId:
                          type: integer
                          format: int32
                          description: "ID of the job title"
                        isAdmin:
                          type: boolean
                          description: "A boolean value indicating whether current user is system admin or not"
                        createdOn:
                          type: string
                          format: datetime
                          description: "The date and time the user was created"
                        deletedOn:
                          type: string
                          format: datetime
                          description: "The date and time the user was deleted"
        403:
          $ref: "#/components/responses/Unauthorized"
    post:
      summary: "Create a new user"
      requestBody:
        description: "Information required for creating a new user"
        required: true
        content:
          "application/json":
            schema:
              type: object
              required:
                - username
                - password
                - email
              properties:
                username:
                  type: string
                  description: "Username for the new account"
                password:
                  type: string
                  format: password
                  description: "Password for the new account"
                email:
                  type: string
                  description: "Email of the user"
                displayName:
                  type: string
                  description: "The name to display in the system, username is used for login only"
                image:
                  type: string
                  format: base64
                  description: "User profile image"
                jobTitleId:
                  type: integer
                  format: int32
                  description: "ID of the job title"
      responses:
        200:
          $ref: "#/components/responses/Success"
        403:
          $ref: "#/components/responses/Unauthorized"
  /users/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        description: "ID of the user"
    get:
      summary: "Get information of the user having the specified ID"
      responses:
        200:
          description: "Success"
          content:
            "application/json":
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        format: int32
                        description: "ID of the user"
                      username:
                        type: string
                        description: "Username of user account"
                      email:
                        type: string
                        description: "Email of the user"
                      displayName:
                        type: string
                        description: "The name to display in the system, username is used for login only"
                      image:
                        type: string
                        format: base64
                        description: "User profile image"
                      jobTitleId:
                        type: integer
                        format: int32
                        description: "ID of the job title"
                      admin:
                        type: boolean
                        description: "A boolean value indicating whether current user is system admin or not"
                      createdOn:
                        type: string
                        format: datetime
                        description: "The date and time the user was created"
                      deletedOn:
                        type: string
                        format: datetime
                        description: "The date and time the user was deleted"
        403:
          $ref: "#/components/responses/Unauthorized"
    put:
      summary: "Update information of the user having the specified ID"
      requestBody:
        description: |
          The information to replace existing values. Only fields submitted are updated, the rest will be kept as-is.

          If the request comes from a regular user and any of `username`, `password`, `email`, or `jobTitleId` is set, the request fails.
        required: true
        content:
          "application/json":
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: "Username of user account"
                email:
                  type: string
                  description: "Email of the user"
                jobTitleId:
                  type: integer
                  format: int32
                  description: "ID of the job title"
                displayName:
                  type: string
                  description: "The name to display in the system, username is used for login only"
                image:
                  type: string
                  format: base64
                  description: "User profile image"
      responses:
        200:
          $ref: "#/components/responses/Success"
        403:
          $ref: "#/components/responses/Unauthorized"
    delete:
      summary: "Delete the user with the specified ID"
      description: |
        For system admin, any other user in the system can be deleted.

        For regular user, only their account can be deleted.
      responses:
        200:
          $ref: "#/components/responses/Success"
        403:
          $ref: "#/components/responses/Unauthorized"
  /projects:
    get:
      summary: "Get information of all projects available to current user"
      description: |
        An archived project or a project the user don't have privilege to view will not be returned.

        In the future, this endpoint will get an extra parameter to get information of archived projects
        that the user have privilege to view.
      responses:
        200:
          description: "Success"
          content:
            "application/json":
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                      properties:
                        id:
                          type: integer
                          format: int32
                          description: "ID of the project"
                        name:
                          type: string
                          description: "Name of the project"
                        description:
                          type: string
                          description: "Description of the project"
                        image:
                          type: string
                          format: base64
                          description: "The project logo"
                        fund:
                          type: number
                          description: "Current fund of the project"
                        createdOn:
                          type: string
                          format: datetime
                          description: "The date and time the project was created"
                        deletedOn:
                          type: string
                          format: datetime
                          description: "The date and time the project was deleted"
        403:
          $ref: "#/components/responses/Unauthorized"
  